<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="com.code" />
	<bean id="mail" class="com.code.entity.Mail" />

   <!-- 线程执行器配置，用于任务注册 -->
    <bean id="executor"
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
        <property name="queueCapacity" value="500" />
    </bean>
 
    <!-- 要调用的工作类 -->
    <bean id="quartzJob" class="com.code.job.QuartzJob"></bean>
 
 
 
    <!--调度业务 : 定义调用对象和调用对象的方法 -->
    <bean id="jobtask1"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="work1" />
    </bean>
     
    <bean id="jobtask2"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="work2" />
    </bean>
     
    <!-- 定义触发时间 -->
    <bean id="doTime1" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="jobtask1" />
        <!-- cron表达式 --><!-- 每隔10秒执行一次 -->
        <property name="cronExpression" value="0/3 * * * * ?" />
    </bean>
     
    <bean id="doTime2" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="jobtask2" />
        <property name="cronExpression" value="0/5 * * * * ?" />
    </bean>
     
    <!--设置调度 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
    <bean id="startQuertz" lazy-init="false" autowire="no"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime1" />
                <ref bean="doTime2" />
            </list>
        </property>
         
        <property name="taskExecutor" ref="executor" />
    </bean>

</beans>